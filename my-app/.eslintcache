[{"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\index.js":"1","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\App.js":"2","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\HomePage.js":"4","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\home.js":"5","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actionTypes.js":"6","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\index.js":"7","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\index.js":"8","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\home.js":"9","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\CommandPage.js":"10","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\SuccessPage.js":"11","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\LoginPage.js":"12","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\auth.js":"13","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\RegistrationPage.js":"14","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\user.js":"15","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\RepositoryListPage.js":"16","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCommandDialog.js":"17","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\user.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":1838,"mtime":1611332429162,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":3501,"mtime":1611696276921,"results":"23","hashOfConfig":"20"},{"size":2152,"mtime":1611696467450,"results":"24","hashOfConfig":"20"},{"size":345,"mtime":1611331308412,"results":"25","hashOfConfig":"20"},{"size":386,"mtime":1611332410491,"results":"26","hashOfConfig":"20"},{"size":347,"mtime":1611332401194,"results":"27","hashOfConfig":"20"},{"size":801,"mtime":1611696473322,"results":"28","hashOfConfig":"20"},{"size":3364,"mtime":1611332180175,"results":"29","hashOfConfig":"20"},{"size":306,"mtime":1611332107203,"results":"30","hashOfConfig":"20"},{"size":4184,"mtime":1611698128204,"results":"31","hashOfConfig":"20"},{"size":1247,"mtime":1611332361433,"results":"32","hashOfConfig":"20"},{"size":6033,"mtime":1611332021951,"results":"33","hashOfConfig":"20"},{"size":485,"mtime":1611330842227,"results":"34","hashOfConfig":"20"},{"size":5314,"mtime":1611738220309,"results":"35","hashOfConfig":"20"},{"size":3781,"mtime":1611738258960,"results":"36","hashOfConfig":"20"},{"size":674,"mtime":1611331667259,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zllaci",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\index.js",[],["86","87"],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\App.js",["88"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport HomePage from \"./components/HomePage\";\nimport CommandPage from \"./components/CommandPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport RegistrationPage from \"./components/RegistrationPage\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./Store/index\";\nimport SuccessPage from './components/SuccessPage';\nimport RepositoryListPage from './components/RepositoryListPage';\nimport { setAuthorizationToken, setUser } from \"./Store/actions/auth\";\nimport jwtDecode from \"jwt-decode\";\n\nconst store = configureStore();\nif (localStorage.jwtToken) {\n  const decodedToken = jwtDecode(localStorage.jwtToken);\n  const now = new Date();\n  if (Date.parse(now) / 1000 >= decodedToken.exp) {\n    try {\n      setAuthorizationToken(false);\n      store.dispatch(setUser({}));\n    } catch (err) {\n      console.log(err);\n    }\n  } else {\n    try {\n      setAuthorizationToken(localStorage.jwtToken);\n      store.dispatch(setUser(decodedToken));\n    } catch (err) {\n      store.dispatch(setUser({}));\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route exact path=\"/home\" component={HomePage} />\n          <Route exact path=\"/command\" component={CommandPage} />\n          <Route exact path=\"/success\" component={SuccessPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/registration\" component={RegistrationPage} />\n          <Route exact path=\"/repositories\" component={RepositoryListPage} />\n\n\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\HomePage.js",["89","90","91","92","93","94","95","96"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {connect} from \"react-redux\";\r\nimport {cloneRepository} from \"../Store/actions/home\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst CloneRepository = ({ cloneRepository, history }) => {\r\n    const [state, setState] = React.useState({\r\n        name: \"\",\r\n        username: localStorage.getItem(\"username\")\r\n    });\r\n\r\n    const [error, setError] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleChangeTextField = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const email = localStorage.getItem(\"username\");\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const res = await cloneRepository(state).then((response) => {\r\n            if (response.status === 200) {\r\n                history.push(\"/command\");\r\n\r\n            }\r\n        });\r\n        setError(true);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Add Git repository\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Git Repository\"\r\n                        name=\"name\"\r\n                        autoFocus\r\n                        autoComplete=\"name\"\r\n                        value = {state.name}\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        OK\r\n                    </Button>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { cloneRepository })(CloneRepository));","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\home.js",["97"],"import {\r\n  GIT_REPOSITORY,\r\n  COMMAND_LINE,\r\n  USER_REPOSITORIES,\r\n  EDITED_REPO\r\n} from \"../actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const cloneRepository = (git) => async (dispatch) => {\r\n  try {\r\n    const gitRepository = await axios.post(\"http://localhost:8081/api/git/repository\", git, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setGitRepository(gitRepository.data));\r\n    return gitRepository;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setGitRepository = (gitRepository) => ({\r\n  type: GIT_REPOSITORY,\r\n  gitRepository,\r\n});\r\n\r\nexport const executeShell = (command) => async (dispatch) => {\r\n  try {\r\n    const commandLine = await axios.post(\"http://localhost:8081/api/git/writeShellCommands\", command, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setShellCommand(commandLine.data));\r\n    return commandLine;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setShellCommand = (commandLine) => ({\r\n  type: COMMAND_LINE,\r\n  commandLine,\r\n});\r\n\r\nexport const getUserRepositories = () => async (dispatch) => {\r\n  try {\r\n    const repositories = await axios.get(\"http://localhost:8081/api/git/repositories\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setUserRepositories(repositories.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setUserRepositories = (repositories) => ({\r\n  type: USER_REPOSITORIES,\r\n  repositories,\r\n});\r\n\r\nexport const editRepo = (repository) => async (dispatch) => {\r\n  try {\r\n    const editedRepo = await axios.put(\"http://localhost:8081/api/git/\" + `${repository.id}`, repository, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setEditedRepo(editedRepo.data));\r\n    return editedRepo;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setEditedRepo = (editedRepo) => ({\r\n  type: EDITED_REPO,\r\n  editedRepo,\r\n});\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actionTypes.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\index.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\index.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\home.js",["98"],"import {\r\n  GIT_REPOSITORY,\r\n  COMMAND_LINE,\r\n  USER_REPOSITORIES,\r\n  EDITED_REPO\r\n} from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n  gitRepository: {},\r\n  commandLine: {},\r\n  repositories: {},\r\n  editedRepo: {},\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GIT_REPOSITORY:\r\n      return {\r\n        ...state,\r\n        gitRepository: action.gitRepository,\r\n      };\r\n    case COMMAND_LINE:\r\n      return {\r\n        ...state,\r\n        commandLine: action.commandLine,\r\n      };\r\n    case USER_REPOSITORIES:\r\n      return {\r\n        ...state,\r\n        repositories: action.repositories,\r\n      };\r\n    case EDITED_REPO:\r\n      return {\r\n        ...state,\r\n        editedRepo: action.editedRepo,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\CommandPage.js",["99","100","101"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { executeShell } from \"../Store/actions/home\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst ExecuteShell = ({ executeShell, history }) => {\r\n    const [state, setState] = React.useState({\r\n        line: \"\",\r\n        checked: false\r\n    });\r\n\r\n    const [error, setError] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleChangeTextField = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleChangeCheckbox = (event, checked) => {\r\n        setState({ ...state, checked: !state.checked })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const res = await executeShell(state).then((response) => {\r\n            if (response.status === 200) {\r\n                history.push(\"/repositories\");\r\n            }\r\n        });\r\n        setError(true);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Insert commands for execution\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"line\"\r\n                        label=\"Shell commands\"\r\n                        name=\"line\"\r\n                        multiline\r\n                        rows={10}\r\n                        autoFocus\r\n                        autoComplete=\"line\"\r\n                        value={state.line}\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        OK\r\n                    </Button>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { executeShell })(ExecuteShell));","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\SuccessPage.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\LoginPage.js",["102","103","104","105","106"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { login } from \"../Store/actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://miro.medium.com/max/4000/1*TNJ7Rpr5G1OJHtKH-IBEFw.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignInSide = ({ login, history }) => {\r\n  const [state, setState] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await login(state).then((response) => {\r\n      if (response.status === 200) {\r\n          history.push(\"/home\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.email}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={state.password}\r\n              autoComplete=\"current-password\"\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/registration\" variant=\"body2\">\r\n                  Don't have an account?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { login })(SignInSide));","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\auth.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\RegistrationPage.js",["107","108","109","110","111"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../Store/actions/user\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst RegisterUser = ({ registerUser, history }) => {\r\n    const [state, setState] = React.useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [error, setError] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleChangeTextField = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const res = await registerUser(state).then((response) => {\r\n            if (response.status === 201) {\r\n                history.push(\"/login\");\r\n\r\n            }\r\n        });\r\n        setError(true);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Regsiter\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        label=\"First name\"\r\n                        name=\"firstName\"\r\n                        autoComplete=\"firstName\"\r\n                        autoFocus\r\n                        value={state.firstName}\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Last name\"\r\n                        name=\"lastName\"\r\n                        autoComplete=\"lastName\"\r\n                        autoFocus\r\n                        value={state.lastName}\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        value={state.username}\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={state.email}\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"New password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={state.password}\r\n                        autoComplete=\"current-password\"\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        OK\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                Already have an account?\r\n                        </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { registerUser })(RegisterUser));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\user.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\RepositoryListPage.js",["112","113","114"],"import React, { useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport dense from \"@material-ui/core/List/ListContext\";\r\nimport { getUserRepositories } from \"../Store/actions/home\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport EditCommandDialog from \"./dialogs/EditCommandDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        marginLeft: 50,\r\n        marginRight: 50,\r\n        marginTop: 20\r\n    },\r\n    container: {\r\n        align: \"center\"\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n        height: 240,\r\n        align: \"center\",\r\n        background: \"lightblue\"\r\n    },\r\n\r\n\r\n\r\n}));\r\n\r\nconst RepositoriesList = ({ getUserRepositories, repositories }) => {\r\n\r\n    const [updated, setUpdated] = React.useState(false);\r\n    useEffect(() => {\r\n        getUserRepositories();\r\n        setUpdated(false);\r\n    }, [updated]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const onUpdateTable = (value) => {\r\n        setUpdated(value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <br />\r\n            <div align=\"center\">\r\n                <h1><b><i>My Repositories</i></b></h1>\r\n            </div>\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.tableWrapper}>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? \"small\" : \"medium\"}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">\r\n                                    <b><i>Name</i></b>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <b><i>Location</i></b>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <b><i>Command</i></b>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {repositories && repositories.length > 0 &&\r\n                                repositories.map((row, index) => {\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            role=\"checkbox\"\r\n                                            key={row.id}\r\n                                        >\r\n                                            <TableCell align=\"center\">\r\n                                                <p>{row.repository_name} </p>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <p>{row.location} </p>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <p> {row.command}   </p>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <EditCommandDialog\r\n                                                    idV={row.id}\r\n                                                    commandV={row.command}\r\n                                                    locationV={row.location}\r\n                                                    onUpdate={onUpdateTable}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n\r\n\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n            <br>\r\n            </br>\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                href=\"/home\"\r\n            >\r\n                Clone new repository\r\n            </Button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repositories: state.home.repositories\r\n});\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, {\r\n        getUserRepositories\r\n    })(RepositoriesList)\r\n);\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCommandDialog.js",["115","116","117","118","119","120"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { editRepo } from '../../Store/actions/home';\r\n\r\nconst FormDialog = ({ idV, commandV, locationV, onUpdate, editRepo }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [error, setError] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [state, setState] = React.useState({\r\n        command: (commandV == null) ? \"\" : commandV,\r\n        id: (idV == null) ? \"\" : idV,\r\n        location: (locationV == null) ? \"\" : locationV,\r\n    });\r\n    const handleChangeTextField = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        onUpdate(false);\r\n    };\r\n\r\n    const handleYES = async (e) => {\r\n        const res = await editRepo(state).then((response) => {\r\n            if (response.status === 200) {\r\n                setOpen(false);\r\n                onUpdate(true);\r\n            }\r\n        });\r\n        setError(true);\r\n    };\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                EDIT\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit shell commands</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Changing commands will affect shell execution process.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"command\"\r\n                        label=\"Commands\"\r\n                        name=\"command\"\r\n                        autoComplete=\"command\"\r\n                        autoFocus\r\n                        multiline\r\n                        rows={10}\r\n                        value={state.command}\r\n                        error={error}\r\n                        onChange={handleChangeTextField}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleYES} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, { editRepo })(FormDialog)\r\n);\r\n\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\user.js",["121"],"import {\r\n    REGISTERED_USER,\r\n    SET_CURRENT_USER,\r\n} from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    registeredUser: {},\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !!Object.keys(action.user).length,\r\n                user: action.user,\r\n            };\r\n        case REGISTERED_USER:\r\n            return {\r\n                ...state,\r\n                registeredUser: action.registeredUser,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n",["122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":24},{"ruleId":"128","severity":1,"message":"134","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":12},{"ruleId":"128","severity":1,"message":"136","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":12},{"ruleId":"128","severity":1,"message":"137","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":11},{"ruleId":"128","severity":1,"message":"138","line":51,"column":11,"nodeType":"130","messageId":"131","endLine":51,"endColumn":16},{"ruleId":"128","severity":1,"message":"139","line":54,"column":15,"nodeType":"130","messageId":"131","endLine":54,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":67,"column":73,"nodeType":"142","messageId":"143","endLine":67,"endColumn":74},{"ruleId":"144","severity":1,"message":"145","line":15,"column":1,"nodeType":"146","endLine":40,"endColumn":3},{"ruleId":"128","severity":1,"message":"134","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"128","severity":1,"message":"147","line":46,"column":11,"nodeType":"130","messageId":"131","endLine":46,"endColumn":31},{"ruleId":"128","severity":1,"message":"139","line":52,"column":15,"nodeType":"130","messageId":"131","endLine":52,"endColumn":18},{"ruleId":"128","severity":1,"message":"132","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":24},{"ruleId":"128","severity":1,"message":"134","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":11},{"ruleId":"128","severity":1,"message":"139","line":67,"column":11,"nodeType":"130","messageId":"131","endLine":67,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":24},{"ruleId":"128","severity":1,"message":"134","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":11},{"ruleId":"128","severity":1,"message":"139","line":56,"column":15,"nodeType":"130","messageId":"131","endLine":56,"endColumn":18},{"ruleId":"128","severity":1,"message":"136","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":12},{"ruleId":"128","severity":1,"message":"135","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":12},{"ruleId":"148","severity":1,"message":"149","line":48,"column":8,"nodeType":"150","endLine":48,"endColumn":17,"suggestions":"151"},{"ruleId":"128","severity":1,"message":"152","line":11,"column":8,"nodeType":"130","messageId":"131","endLine":11,"endColumn":16},{"ruleId":"128","severity":1,"message":"153","line":13,"column":8,"nodeType":"130","messageId":"131","endLine":13,"endColumn":19},{"ruleId":"128","severity":1,"message":"154","line":14,"column":8,"nodeType":"130","messageId":"131","endLine":14,"endColumn":18},{"ruleId":"128","severity":1,"message":"155","line":15,"column":8,"nodeType":"130","messageId":"131","endLine":15,"endColumn":14},{"ruleId":"128","severity":1,"message":"156","line":29,"column":11,"nodeType":"130","messageId":"131","endLine":29,"endColumn":18},{"ruleId":"128","severity":1,"message":"139","line":53,"column":15,"nodeType":"130","messageId":"131","endLine":53,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":12,"column":1,"nodeType":"146","endLine":28,"endColumn":3},{"ruleId":"124","replacedBy":"157"},{"ruleId":"126","replacedBy":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'email' is assigned a value but never used.","'res' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'handleChangeCheckbox' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserRepositories'. Either include it or remove the dependency array. If 'getUserRepositories' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["161"],"'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'classes' is assigned a value but never used.",["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [getUserRepositories, updated]",{"range":"164","text":"165"},[1441,1450],"[getUserRepositories, updated]"]