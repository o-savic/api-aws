[{"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\index.js":"1","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\App.js":"2","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\home.js":"4","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actionTypes.js":"5","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\index.js":"6","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\index.js":"7","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\home.js":"8","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\auth.js":"9","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\user.js":"10","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCommandDialog.js":"11","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\user.js":"12","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\properties\\path-properites.js":"13","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\LoginPage.js":"14","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Git\\RepositoryListPage.js":"15","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\RegistrationPage.js":"16","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Git\\GitPage.js":"17","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\NavigationBar.js":"18","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\UserProfilePage.js":"19","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\SuccessfullyUpdatedPage.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":2618,"mtime":1611844414339,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2151,"mtime":1611842330504,"results":"25","hashOfConfig":"22"},{"size":439,"mtime":1611756188595,"results":"26","hashOfConfig":"22"},{"size":386,"mtime":1611332410491,"results":"27","hashOfConfig":"22"},{"size":347,"mtime":1611332401194,"results":"28","hashOfConfig":"22"},{"size":801,"mtime":1611696473322,"results":"29","hashOfConfig":"22"},{"size":1289,"mtime":1611748461910,"results":"30","hashOfConfig":"22"},{"size":1312,"mtime":1611824496436,"results":"31","hashOfConfig":"22"},{"size":3315,"mtime":1611830616007,"results":"32","hashOfConfig":"22"},{"size":991,"mtime":1611756242146,"results":"33","hashOfConfig":"22"},{"size":173,"mtime":1611757369872,"results":"34","hashOfConfig":"22"},{"size":4349,"mtime":1611755914220,"results":"35","hashOfConfig":"22"},{"size":4677,"mtime":1611845635843,"results":"36","hashOfConfig":"22"},{"size":4989,"mtime":1611828380648,"results":"37","hashOfConfig":"22"},{"size":4209,"mtime":1611845592986,"results":"38","hashOfConfig":"22"},{"size":4033,"mtime":1611843064266,"results":"39","hashOfConfig":"22"},{"size":7972,"mtime":1611842227751,"results":"40","hashOfConfig":"22"},{"size":295,"mtime":1611830590790,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zllaci",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\index.js",[],["91","92"],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\App.js",["93"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport GitPage from \"./components/Git/GitPage\";\nimport LoginPage from \"./components/User/LoginPage\";\nimport RegistrationPage from \"./components/User/RegistrationPage\"\nimport UserProfilePage from \"./components/User/UserProfilePage\"\nimport SucccessfullyUpdatedPage from \"./components/User/SuccessfullyUpdatedPage\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./Store/index\";\nimport RepositoryListPage from './components/Git/RepositoryListPage';\nimport { setAuthorizationToken, setUser } from \"./Store/actions/auth\";\nimport jwtDecode from \"jwt-decode\";\nimport { Redirect } from 'react-router';\n\nconst store = configureStore();\nif (localStorage.jwtToken) {\n  const decodedToken = jwtDecode(localStorage.jwtToken);\n  const now = new Date();\n  if (Date.parse(now) / 1000 >= decodedToken.exp) {\n    try {\n      setAuthorizationToken(false);\n      store.dispatch(setUser({}));\n    } catch (err) {\n      console.log(err);\n    }\n  } else {\n    try {\n      setAuthorizationToken(localStorage.jwtToken);\n      store.dispatch(setUser(decodedToken));\n    } catch (err) {\n      store.dispatch(setUser({}));\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/registration\" component={RegistrationPage} />\n\n          <Route exact path=\"/repositories\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <RepositoryListPage />\n              )\n          )} />\n          <Route exact path=\"/profile\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <UserProfilePage />\n              )\n          )} />\n          <Route exact path=\"/success\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <SucccessfullyUpdatedPage />\n              )\n          )} />\n          <Route exact path=\"/git\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <GitPage />\n              )\n          )} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\home.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actionTypes.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\index.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\index.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\home.js",["94"],"import {\r\n  GIT_REPOSITORY,\r\n  COMMAND_LINE,\r\n  USER_REPOSITORIES,\r\n  EDITED_REPO\r\n} from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n  gitRepository: {},\r\n  commandLine: {},\r\n  repositories: {},\r\n  editedRepo: {},\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GIT_REPOSITORY:\r\n      return {\r\n        ...state,\r\n        gitRepository: action.gitRepository,\r\n      };\r\n    case COMMAND_LINE:\r\n      return {\r\n        ...state,\r\n        commandLine: action.commandLine,\r\n      };\r\n    case USER_REPOSITORIES:\r\n      return {\r\n        ...state,\r\n        repositories: action.repositories,\r\n      };\r\n    case EDITED_REPO:\r\n      return {\r\n        ...state,\r\n        editedRepo: action.editedRepo,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\auth.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\user.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCommandDialog.js",["95","96","97","98","99","100"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { editRepo } from '../../Store/actions/home';\r\n\r\nconst FormDialog = ({ idV, commandV, locationV, onUpdate, editRepo }) => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [state, setState] = React.useState({\r\n    command: (commandV == null) ? \"\" : commandV,\r\n    id: (idV == null) ? \"\" : idV,\r\n    location: (locationV == null) ? \"\" : locationV,\r\n  });\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onUpdate(false);\r\n  };\r\n\r\n  const handleYES = async (e) => {\r\n    const res = await editRepo(state).then((response) => {\r\n      if (response.status === 200) {\r\n        setOpen(false);\r\n        onUpdate(true);\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        EDIT\r\n            </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit shell commands</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Changing commands will affect shell execution process.\r\n                    </DialogContentText>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"command\"\r\n            label=\"Commands\"\r\n            name=\"command\"\r\n            autoComplete=\"command\"\r\n            autoFocus\r\n            multiline\r\n            rows={10}\r\n            value={state.command}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n                    </Button>\r\n          <Button onClick={handleYES} color=\"primary\">\r\n            Save\r\n                    </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { editRepo })(FormDialog)\r\n);\r\n\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\user.js",["101"],"import {\r\n    REGISTERED_USER,\r\n    SET_CURRENT_USER,\r\n    EDITED_USER,\r\n    SET_USER_DATA\r\n} from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    registeredUser: {},\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !!Object.keys(action.user).length,\r\n                user: action.user,\r\n            };\r\n        case REGISTERED_USER:\r\n            return {\r\n                ...state,\r\n                registeredUser: action.registeredUser,\r\n            };\r\n        case EDITED_USER:\r\n            return {\r\n                ...state, \r\n                editedUser: action.editedUser\r\n            }\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, \r\n                userData: action.userData\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\properties\\path-properites.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\LoginPage.js",["102","103","104","105"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { login } from \"../../Store/actions/auth\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://miro.medium.com/max/4000/1*TNJ7Rpr5G1OJHtKH-IBEFw.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignInSide = ({ login, history }) => {\r\n  const [state, setState] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await login(state).then((response) => {\r\n      if (response.status === 200) {\r\n        history.push(\"/git\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.email}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={state.password}\r\n              autoComplete=\"current-password\"\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/registration\" variant=\"body2\">\r\n                  Don't have an account?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { login })(SignInSide));","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Git\\RepositoryListPage.js",["106","107","108"],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\RegistrationPage.js",["109","110","111","112"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../Store/actions/user\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst RegisterUser = ({ registerUser, history }) => {\r\n  const [state, setState] = React.useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await registerUser(state).then((response) => {\r\n      if (response.status === 201) {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"firstName\"\r\n            label=\"First name\"\r\n            name=\"firstName\"\r\n            autoComplete=\"firstName\"\r\n            autoFocus\r\n            value={state.firstName}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"lastName\"\r\n            label=\"Last name\"\r\n            name=\"lastName\"\r\n            autoComplete=\"lastName\"\r\n            autoFocus\r\n            value={state.lastName}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={state.username}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={state.email}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"New password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={state.password}\r\n            autoComplete=\"current-password\"\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            OK\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account?\r\n                        </Link>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { registerUser })(RegisterUser));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Git\\GitPage.js",["113","114","115","116","117","118","119","120"],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\NavigationBar.js",["121","122"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { logout } from \"../Store/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst NavigationBar = ({ logout }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const showButtons = () => {\r\n    if (localStorage.getItem(\"jwtToken\") !== \"\") {\r\n      return (\r\n        <div>\r\n          <Button color=\"inherit\" className={classes.submit} href=\"/profile\"> Profile</Button>\r\n          <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <Button color=\"inherit\" >Login</Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        color=\"primary\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar>\r\n          <ReorderIcon\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n            color=\"inherit\"\r\n            onClick={handleDrawerOpen}\r\n            aria-label=\"open drawer\">\r\n            <MenuIcon />\r\n          </ReorderIcon>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Jenkins\r\n          </Typography>\r\n          {showButtons()}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          aria-label=\"simple tabs example\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Repositories\" href=\"/repositories\" {...a11yProps(0)} icon={<GitHubIcon />} />\r\n          <Tab label=\"New repository\" href=\"/git\" {...a11yProps(0)} icon={<AddCircleIcon />} />\r\n\r\n        </Tabs>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\nexport default withRouter(connect(mapStateToProps, { logout })(NavigationBar));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\UserProfilePage.js",["123","124","125","126","127","128","129"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { editUser } from \"../../Store/actions/user\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { getUserData } from \"../../Store/actions/user\"\r\nimport NavigationBar from \"../../components/NavigationBar\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { userPath } from '../../properties/path-properites'\r\nimport Axios from \"axios\";\r\nimport { StarRate } from '@material-ui/icons';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '80%', // Fix IE 11 issue.,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst UserProfile = ({ getUserData, userData, email, editUser, history }) => {\r\n\r\n  const classes = useStyles();\r\n  const [error, setError] = React.useState(false);\r\n  const [change, setChange] = useState(null);\r\n  const [state, setState] = React.useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    id: 0,\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmedPassword: \"\",\r\n    loaded: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState({ loaded: false });\r\n    getUserData(email);\r\n    setState({ loaded: true });\r\n    if (userData != undefined) {\r\n      setState({\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        username: userData.username,\r\n        id: userData.id,\r\n      })\r\n    }\r\n  }, []); //[getUserData, email]\r\n\r\n  if (window.onbeforeunload) {\r\n    setState({ loaded: false })\r\n  }\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    const res = await editUser(state).then((response) => {\r\n      if (response.status === 200) {\r\n        history.push(\"/success\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    const resp = await Axios.put(userPath + `/editPass/user/${userData.id}`, {\r\n      newPassword: state.newPassword,\r\n      oldPassword: state.oldPassword,\r\n    }).then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        setState({\r\n          confirmedPassword: \"\",\r\n          newPassword: \"\",\r\n          oldPassword: \"\",\r\n        });\r\n        history.push(\"/success\");\r\n      }\r\n    });\r\n      setError(true);\r\n  };\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar></NavigationBar>\r\n\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Your profile\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              disabled\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              autoFocus\r\n              value={email}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              autoFocus\r\n              required\r\n              autoComplete=\"firstName\"\r\n              value={state.firstName}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              autoFocus\r\n              value={state.lastName}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"username\"\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              autoFocus\r\n              required\r\n              autoComplete=\"username\"\r\n              value={state.username}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleUpdate}\r\n            >\r\n              Update\r\n            </Button>\r\n            <div>\r\n              <Divider />\r\n            </div>\r\n            <div>\r\n              <Typography component=\"h5\" variant=\"h5\" align=\"center\">\r\n                Change password\r\n              </Typography>\r\n            </div>\r\n\r\n            <TextField\r\n              error={change === false}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"oldPassword\"\r\n              name=\"oldPassword\"\r\n              label=\"Old password\"\r\n              autoFocus\r\n              required\r\n              type=\"password\"\r\n              autoComplete=\"oldPassword\"\r\n              value={state.oldPassword}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              label=\"New password\"\r\n              autoFocus\r\n              required\r\n              type=\"password\"\r\n              autoComplete=\"newPassword\"\r\n              value={state.newPassword}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <TextField\r\n              error={\r\n                state.confirmedPassword !== state.newPassword &&\r\n                state.newPassword.length !== 0\r\n              }\r\n              helperText={\r\n                state.confirmedPassword !== state.newPassword\r\n                  ? \"Your password and confirmation password do not match.\"\r\n                  : \"\"\r\n              }\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"confirmedPassword\"\r\n              name=\"confirmedPassword\"\r\n              label=\"Confirm password\"\r\n              autoFocus\r\n              required\r\n              type=\"password\"\r\n              autoComplete=\"confirmedPassword\"\r\n              value={state.confirmedPassword}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handlePasswordChange}\r\n              disabled={state.confirmedPassword !== state.newPassword}\r\n            >\r\n              Change password\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userData: state.user.userData,\r\n  email: state.user.user.sub\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { getUserData, editUser })(UserProfile));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\SuccessfullyUpdatedPage.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":12},{"ruleId":"138","severity":1,"message":"139","line":15,"column":1,"nodeType":"140","endLine":40,"endColumn":3},{"ruleId":"134","severity":1,"message":"141","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":16},{"ruleId":"134","severity":1,"message":"142","line":13,"column":8,"nodeType":"136","messageId":"137","endLine":13,"endColumn":19},{"ruleId":"134","severity":1,"message":"143","line":14,"column":8,"nodeType":"136","messageId":"137","endLine":14,"endColumn":18},{"ruleId":"134","severity":1,"message":"144","line":15,"column":8,"nodeType":"136","messageId":"137","endLine":15,"endColumn":14},{"ruleId":"134","severity":1,"message":"145","line":29,"column":9,"nodeType":"136","messageId":"137","endLine":29,"endColumn":16},{"ruleId":"134","severity":1,"message":"146","line":53,"column":11,"nodeType":"136","messageId":"137","endLine":53,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":14,"column":1,"nodeType":"140","endLine":40,"endColumn":3},{"ruleId":"134","severity":1,"message":"147","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":24},{"ruleId":"134","severity":1,"message":"148","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":16},{"ruleId":"134","severity":1,"message":"149","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":11},{"ruleId":"134","severity":1,"message":"146","line":68,"column":11,"nodeType":"136","messageId":"137","endLine":68,"endColumn":14},{"ruleId":"134","severity":1,"message":"150","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"151","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":12},{"ruleId":"152","severity":1,"message":"153","line":49,"column":6,"nodeType":"154","endLine":49,"endColumn":15,"suggestions":"155"},{"ruleId":"134","severity":1,"message":"147","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":24},{"ruleId":"134","severity":1,"message":"148","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":16},{"ruleId":"134","severity":1,"message":"149","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":11},{"ruleId":"134","severity":1,"message":"146","line":58,"column":11,"nodeType":"136","messageId":"137","endLine":58,"endColumn":14},{"ruleId":"134","severity":1,"message":"156","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"147","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":24},{"ruleId":"134","severity":1,"message":"148","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":16},{"ruleId":"134","severity":1,"message":"151","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":12},{"ruleId":"134","severity":1,"message":"150","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":12},{"ruleId":"134","severity":1,"message":"149","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":11},{"ruleId":"134","severity":1,"message":"157","line":54,"column":9,"nodeType":"136","messageId":"137","endLine":54,"endColumn":14},{"ruleId":"134","severity":1,"message":"146","line":57,"column":11,"nodeType":"136","messageId":"137","endLine":57,"endColumn":14},{"ruleId":"134","severity":1,"message":"158","line":19,"column":8,"nodeType":"136","messageId":"137","endLine":19,"endColumn":20},{"ruleId":"134","severity":1,"message":"159","line":20,"column":8,"nodeType":"136","messageId":"137","endLine":20,"endColumn":17},{"ruleId":"134","severity":1,"message":"160","line":18,"column":10,"nodeType":"136","messageId":"137","endLine":18,"endColumn":18},{"ruleId":"134","severity":1,"message":"161","line":44,"column":10,"nodeType":"136","messageId":"137","endLine":44,"endColumn":15},{"ruleId":"134","severity":1,"message":"162","line":45,"column":18,"nodeType":"136","messageId":"137","endLine":45,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":61,"column":18,"nodeType":"165","messageId":"166","endLine":61,"endColumn":20},{"ruleId":"152","severity":1,"message":"167","line":69,"column":6,"nodeType":"154","endLine":69,"endColumn":8,"suggestions":"168"},{"ruleId":"134","severity":1,"message":"146","line":77,"column":11,"nodeType":"136","messageId":"137","endLine":77,"endColumn":14},{"ruleId":"134","severity":1,"message":"169","line":87,"column":11,"nodeType":"136","messageId":"137","endLine":87,"endColumn":15},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'classes' is assigned a value but never used.","'res' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserRepositories'. Either include it or remove the dependency array. If 'getUserRepositories' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["172"],"'Avatar' is defined but never used.","'email' is assigned a value but never used.","'FavoriteIcon' is defined but never used.","'GroupIcon' is defined but never used.","'StarRate' is defined but never used.","'error' is assigned a value but never used.","'setChange' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'email', 'getUserData', and 'userData'. Either include them or remove the dependency array. If 'getUserData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["173"],"'resp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [getUserRepositories, updated]",{"range":"178","text":"179"},"Update the dependencies array to be: [email, getUserData, userData]",{"range":"180","text":"181"},[1437,1446],"[getUserRepositories, updated]",[2099,2101],"[email, getUserData, userData]"]