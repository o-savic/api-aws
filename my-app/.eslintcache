[{"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\index.js":"1","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\App.js":"2","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\home.js":"4","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actionTypes.js":"5","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\index.js":"6","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\index.js":"7","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\home.js":"8","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\auth.js":"9","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\user.js":"10","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCommandDialog.js":"11","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\user.js":"12","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\properties\\path-properites.js":"13","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\LoginPage.js":"14","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\RegistrationPage.js":"15","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\NavigationBar.js":"16","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\UserProfilePage.js":"17","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\SuccessfullyUpdatedPage.js":"18","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\TabPanel.js":"19","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\credentials.js":"20","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\CredentialsListPage.js":"21","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\GitPage.js":"22","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\RepositoryListPage.js":"23","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\AddCredentialsPage.js":"24","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\credentials.js":"25","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\DeleteCredentialsDialog.js":"26","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCredentialsDialog.js":"27","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\DeleteRepoDialog.js":"28","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\WorkspacePage.js":"29"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":3559,"mtime":1612177567689,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":2715,"mtime":1612787898958,"results":"34","hashOfConfig":"31"},{"size":647,"mtime":1612177219531,"results":"35","hashOfConfig":"31"},{"size":386,"mtime":1612536994684,"results":"36","hashOfConfig":"31"},{"size":402,"mtime":1611934614770,"results":"37","hashOfConfig":"31"},{"size":921,"mtime":1612177270758,"results":"38","hashOfConfig":"31"},{"size":1289,"mtime":1611748461910,"results":"39","hashOfConfig":"31"},{"size":1512,"mtime":1611933841591,"results":"40","hashOfConfig":"31"},{"size":3720,"mtime":1612446139462,"results":"41","hashOfConfig":"31"},{"size":991,"mtime":1611756242146,"results":"42","hashOfConfig":"31"},{"size":245,"mtime":1611921086289,"results":"43","hashOfConfig":"31"},{"size":4349,"mtime":1611755914220,"results":"44","hashOfConfig":"31"},{"size":4989,"mtime":1611828380648,"results":"45","hashOfConfig":"31"},{"size":4931,"mtime":1611928803168,"results":"46","hashOfConfig":"31"},{"size":8130,"mtime":1612787874278,"results":"47","hashOfConfig":"31"},{"size":295,"mtime":1611830590790,"results":"48","hashOfConfig":"31"},{"size":595,"mtime":1611909441761,"results":"49","hashOfConfig":"31"},{"size":590,"mtime":1611921256138,"results":"50","hashOfConfig":"31"},{"size":5213,"mtime":1611932457130,"results":"51","hashOfConfig":"31"},{"size":4338,"mtime":1612782628035,"results":"52","hashOfConfig":"31"},{"size":6491,"mtime":1612191443604,"results":"53","hashOfConfig":"31"},{"size":4750,"mtime":1611927789654,"results":"54","hashOfConfig":"31"},{"size":2015,"mtime":1611930897300,"results":"55","hashOfConfig":"31"},{"size":2345,"mtime":1611932846011,"results":"56","hashOfConfig":"31"},{"size":4148,"mtime":1611932817630,"results":"57","hashOfConfig":"31"},{"size":2270,"mtime":1611935074422,"results":"58","hashOfConfig":"31"},{"size":702,"mtime":1612191309289,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"zllaci",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"62"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"62"},"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\index.js",[],["139","140"],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\App.js",["141"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport GitPage from \"./components/Home/GitPage\";\nimport WorkspacePage from \"./components/Home/WorkspacePage\"\nimport AddCredentialsPage from \"./components/Home/AddCredentialsPage\";\nimport CredentialsListPage from \"./components/Home/CredentialsListPage\";\nimport LoginPage from \"./components/User/LoginPage\";\nimport RegistrationPage from \"./components/User/RegistrationPage\"\nimport UserProfilePage from \"./components/User/UserProfilePage\"\nimport SucccessfullyUpdatedPage from \"./components/User/SuccessfullyUpdatedPage\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./Store/index\";\nimport RepositoryListPage from './components/Home/RepositoryListPage';\nimport { setAuthorizationToken, setUser } from \"./Store/actions/auth\";\nimport jwtDecode from \"jwt-decode\";\nimport { Redirect } from 'react-router';\n\nconst store = configureStore();\nif (localStorage.jwtToken) {\n  const decodedToken = jwtDecode(localStorage.jwtToken);\n  const now = new Date();\n  if (Date.parse(now) / 1000 >= decodedToken.exp) {\n    try {\n      setAuthorizationToken(false);\n      store.dispatch(setUser({}));\n    } catch (err) {\n      console.log(err);\n    }\n  } else {\n    try {\n      setAuthorizationToken(localStorage.jwtToken);\n      store.dispatch(setUser(decodedToken));\n    } catch (err) {\n      store.dispatch(setUser({}));\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/registration\" component={RegistrationPage} />\n\n          <Route exact path=\"/repositories\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <RepositoryListPage />\n              )\n          )} />\n          <Route exact path=\"/profile\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <UserProfilePage />\n              )\n          )} />\n          <Route exact path=\"/success\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <SucccessfullyUpdatedPage />\n              )\n          )} />\n          <Route exact path=\"/git\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <GitPage />\n              )\n          )} />\n\n          <Route exact path=\"/workspace\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <WorkspacePage />\n              )\n          )} />\n\n          <Route exact path=\"/addCredentials\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <AddCredentialsPage />\n              )\n          )} />\n\n          <Route exact path=\"/myCredentials\" render={() => (\n            localStorage.getItem(\"jwtToken\") == null ? (\n              <Redirect to=\"/login\" />\n            ) : (\n                <CredentialsListPage />\n              )\n          )} />\n\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\home.js",["142"],"import {\r\n  GIT_REPOSITORY,\r\n  COMMAND_LINE,\r\n  USER_REPOSITORIES,\r\n  EDITED_REPO,\r\n  WORKSPACE\r\n} from \"../actionTypes\";\r\nimport axios from \"axios\";\r\nimport { gitPath } from \"../../properties/path-properites\";\r\n\r\nexport const cloneRepository = (git) => async (dispatch) => {\r\n  try {\r\n    const gitRepository = await axios.post(\"http://localhost:8081/api/git/repository\", git, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setGitRepository(gitRepository.data));\r\n    return gitRepository;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setGitRepository = (gitRepository) => ({\r\n  type: GIT_REPOSITORY,\r\n  gitRepository,\r\n});\r\n\r\nexport const executeShell = () => async (dispatch) => {\r\n  try {\r\n    const commandLine = await axios.post(gitPath + \"/execute\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setShellCommand(commandLine.data));\r\n    return commandLine;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setShellCommand = (commandLine) => ({\r\n  type: COMMAND_LINE,\r\n  commandLine,\r\n});\r\n\r\nexport const getUserRepositories = () => async (dispatch) => {\r\n  try {\r\n    const repositories = await axios.get(gitPath + \"/repositories\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setUserRepositories(repositories.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setUserRepositories = (repositories) => ({\r\n  type: USER_REPOSITORIES,\r\n  repositories,\r\n});\r\n\r\nexport const editRepo = (repository) => async (dispatch) => {\r\n  try {\r\n    const editedRepo = await axios.put(gitPath + `/${repository.id}`, repository, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n    dispatch(setEditedRepo(editedRepo.data));\r\n    return editedRepo;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setEditedRepo = (editedRepo) => ({\r\n  type: EDITED_REPO,\r\n  editedRepo,\r\n});\r\n\r\nexport const deleteRepo = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(gitPath + `/${id}`);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getWorkspace = (id) => async (dispatch) => {\r\n  try {\r\n    const workspace = await axios.get(gitPath + `/${id}` +\"/workspace\");\r\n    console.log(workspace.data);\r\n    dispatch(setWorkspace(workspace.data));\r\n    return workspace;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return err.response;\r\n  }\r\n};\r\n\r\nexport const setWorkspace = (workspace) => ({\r\n  type: WORKSPACE,\r\n  workspace,\r\n});\r\n\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actionTypes.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\index.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\index.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\home.js",["143"],"import {\r\n  GIT_REPOSITORY,\r\n  COMMAND_LINE,\r\n  USER_REPOSITORIES,\r\n  EDITED_REPO,\r\n  WORKSPACE\r\n} from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n  gitRepository: {},\r\n  commandLine: {},\r\n  repositories: {},\r\n  editedRepo: {},\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GIT_REPOSITORY:\r\n      return {\r\n        ...state,\r\n        gitRepository: action.gitRepository,\r\n      };\r\n    case COMMAND_LINE:\r\n      return {\r\n        ...state,\r\n        commandLine: action.commandLine,\r\n      };\r\n    case USER_REPOSITORIES:\r\n      return {\r\n        ...state,\r\n        repositories: action.repositories,\r\n      };\r\n    case EDITED_REPO:\r\n      return {\r\n        ...state,\r\n        editedRepo: action.editedRepo,\r\n      };   \r\n    case WORKSPACE:\r\n      return {\r\n        ...state, \r\n        workspace: action.workspace\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\auth.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\user.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCommandDialog.js",["144","145","146","147","148","149"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { editRepo } from '../../Store/actions/home';\r\n\r\nconst FormDialog = ({ idV, commandV, locationV,  nameV, onUpdate, editRepo }) => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [state, setState] = React.useState({\r\n    command: (commandV == null) ? \"\" : commandV,\r\n    id: (idV == null) ? \"\" : idV,\r\n    name: (nameV == null) ? \"\" : nameV,\r\n    location: (locationV == null) ? \"\" : locationV,\r\n  });\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onUpdate(false);\r\n  };\r\n\r\n  const handleYES = async (e) => {\r\n    const res = await editRepo(state).then((response) => {\r\n      if (response.status === 200) {\r\n        setOpen(false);\r\n        onUpdate(true);\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        CONFIGURE\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Configure</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Changing commands will affect shell execution process.\r\n          </DialogContentText>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            value={state.name}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"command\"\r\n            label=\"Commands\"\r\n            name=\"command\"\r\n            autoComplete=\"command\"\r\n            autoFocus\r\n            multiline\r\n            rows={10}\r\n            value={state.command}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n                    </Button>\r\n          <Button onClick={handleYES} color=\"primary\">\r\n            Save\r\n                    </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { editRepo })(FormDialog)\r\n);\r\n\r\n",["150","151"],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\user.js",["152"],"import {\r\n    REGISTERED_USER,\r\n    SET_CURRENT_USER,\r\n    EDITED_USER,\r\n    SET_USER_DATA\r\n} from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    registeredUser: {},\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !!Object.keys(action.user).length,\r\n                user: action.user,\r\n            };\r\n        case REGISTERED_USER:\r\n            return {\r\n                ...state,\r\n                registeredUser: action.registeredUser,\r\n            };\r\n        case EDITED_USER:\r\n            return {\r\n                ...state, \r\n                editedUser: action.editedUser\r\n            }\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, \r\n                userData: action.userData\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\properties\\path-properites.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\LoginPage.js",["153","154","155","156"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { login } from \"../../Store/actions/auth\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://miro.medium.com/max/4000/1*TNJ7Rpr5G1OJHtKH-IBEFw.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignInSide = ({ login, history }) => {\r\n  const [state, setState] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await login(state).then((response) => {\r\n      if (response.status === 200) {\r\n        history.push(\"/git\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.email}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={state.password}\r\n              autoComplete=\"current-password\"\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/registration\" variant=\"body2\">\r\n                  Don't have an account?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { login })(SignInSide));","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\RegistrationPage.js",["157","158","159","160"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../Store/actions/user\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst RegisterUser = ({ registerUser, history }) => {\r\n  const [state, setState] = React.useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await registerUser(state).then((response) => {\r\n      if (response.status === 201) {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"firstName\"\r\n            label=\"First name\"\r\n            name=\"firstName\"\r\n            autoComplete=\"firstName\"\r\n            autoFocus\r\n            value={state.firstName}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"lastName\"\r\n            label=\"Last name\"\r\n            name=\"lastName\"\r\n            autoComplete=\"lastName\"\r\n            autoFocus\r\n            value={state.lastName}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={state.username}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={state.email}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"New password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={state.password}\r\n            autoComplete=\"current-password\"\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            OK\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account?\r\n                        </Link>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { registerUser })(RegisterUser));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\NavigationBar.js",["161","162","163","164","165","166"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { logout } from \"../Store/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport EnhancedEncryptionIcon from '@material-ui/icons/EnhancedEncryption';\r\nimport UserProfilePage from './User/UserProfilePage';\r\nimport TabPanel from \"./TabPanel\";\r\nimport GitPage from \"./Home/GitPage\"\r\nimport RepositoryListPage from \"./Home/RepositoryListPage\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst NavigationBar = ({ logout }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const showButtons = () => {\r\n    if (localStorage.getItem(\"jwtToken\") !== \"\") {\r\n      return (\r\n        <div>\r\n          <Button color=\"inherit\" className={classes.submit} href=\"/profile\"> Profile</Button>\r\n          <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <Button color=\"inherit\" >Login</Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        color=\"primary\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar>\r\n          <ReorderIcon\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n            color=\"inherit\"\r\n            onClick={handleDrawerOpen}\r\n            aria-label=\"open drawer\">\r\n            <MenuIcon />\r\n          </ReorderIcon>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Jenkins\r\n          </Typography>\r\n          {showButtons()}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          aria-label=\"simple tabs example\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Repositories\" href=\"/repositories\" {...a11yProps(0)} icon={<GitHubIcon />} />\r\n          <Tab label=\"New repository\" href=\"/git\" {...a11yProps(1)} icon={<AddCircleIcon />} />\r\n          <Divider />\r\n          <Tab label=\"Credentials\" href=\"/myCredentials\" {...a11yProps(2)} icon={<LockIcon />} />\r\n          <Tab label=\"Add credentials\" href=\"/addCredentials\" {...a11yProps(3)} icon={<EnhancedEncryptionIcon />} />\r\n          <Tab label=\"Profile\" style={{position: \"fixed\", bottom:\"0\"}} href=\"/profile\"  {...a11yProps(4)} icon={<AccountCircleIcon />} />\r\n\r\n        </Tabs>\r\n      </Drawer>\r\n\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\nexport default withRouter(connect(mapStateToProps, { logout })(NavigationBar));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\UserProfilePage.js",["167","168","169","170","171","172","173"],"import React, { useEffect, useState, useLayoutEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { editUser } from \"../../Store/actions/user\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUserData } from \"../../Store/actions/user\"\r\nimport NavigationBar from \"../../components/NavigationBar\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { userPath } from '../../properties/path-properites'\r\nimport Axios from \"axios\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '80%', // Fix IE 11 issue.,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst UserProfile = ({ getUserData, userData, email, editUser, history }) => {\r\n\r\n  const classes = useStyles();\r\n  const [error, setError] = React.useState(false);\r\n  const [change, setChange] = useState(null);\r\n  const [state, setState] = React.useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    id: 0,\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmedPassword: \"\",\r\n    loaded: false\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    setState({ loaded: false });\r\n\r\n    (async () => {\r\n      const result = await getUserData(email).then((response) => {\r\n        if (response.status === 200) {\r\n          setState({ loaded: true });\r\n          setState({\r\n            firstName: localStorage.getItem(\"firstName\"),\r\n            lastName: localStorage.getItem(\"lastName\"),\r\n            username: localStorage.getItem(\"usernameV\"),\r\n            id: localStorage.getItem(\"id\"),\r\n          });\r\n        }\r\n      });\r\n    })();\r\n  }, []); //[getUserData, email]\r\n\r\n  if (window.onbeforeunload) {\r\n    setState({ loaded: false })\r\n  }\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    const res = await editUser(state).then((response) => {\r\n      if (response.status === 200) {\r\n        history.push(\"/success\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    const resp = await Axios.put(userPath + `/editPass/user/${state.id}`, {\r\n      newPassword: state.newPassword,\r\n      oldPassword: state.oldPassword,\r\n    }).then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        setState({\r\n          confirmedPassword: \"\",\r\n          newPassword: \"\",\r\n          oldPassword: \"\",\r\n        });\r\n        history.push(\"/success\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar></NavigationBar>\r\n\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <AccountCircleIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Your profile\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              disabled\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              autoFocus\r\n              value={email}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              autoFocus\r\n              required\r\n              autoComplete=\"firstName\"\r\n              value={state.firstName}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              autoFocus\r\n              value={state.lastName}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"username\"\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              autoFocus\r\n              required\r\n              autoComplete=\"username\"\r\n              value={state.username}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleUpdate}\r\n            >\r\n              Update\r\n            </Button>\r\n            <div>\r\n              <Divider />\r\n            </div>\r\n            <div>\r\n              <Typography component=\"h5\" variant=\"h5\" align=\"center\">\r\n                Change password\r\n              </Typography>\r\n            </div>\r\n\r\n            <TextField\r\n              error={change === false}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"oldPassword\"\r\n              name=\"oldPassword\"\r\n              label=\"Old password\"\r\n              autoFocus\r\n              required\r\n              type=\"password\"\r\n              autoComplete=\"oldPassword\"\r\n              value={state.oldPassword}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              label=\"New password\"\r\n              autoFocus\r\n              required\r\n              type=\"password\"\r\n              autoComplete=\"newPassword\"\r\n              value={state.newPassword}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <TextField\r\n              error={\r\n                state.confirmedPassword !== state.newPassword &&\r\n                state.newPassword.length !== 0\r\n              }\r\n              helperText={\r\n                state.confirmedPassword !== state.newPassword\r\n                  ? \"Your password and confirmation password do not match.\"\r\n                  : \"\"\r\n              }\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"confirmedPassword\"\r\n              name=\"confirmedPassword\"\r\n              label=\"Confirm password\"\r\n              autoFocus\r\n              required\r\n              type=\"password\"\r\n              autoComplete=\"confirmedPassword\"\r\n              value={state.confirmedPassword}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handlePasswordChange}\r\n              disabled={state.confirmedPassword !== state.newPassword}\r\n            >\r\n              Change password\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userData: state.user.userData,\r\n  email: state.user.user.sub\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { getUserData, editUser })(UserProfile));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\User\\SuccessfullyUpdatedPage.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\TabPanel.js",[],"C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\reducers\\credentials.js",["174"],"import {\r\n    ADDED_CREDENTIALS,\r\n    CREDENTIALS_LIST\r\n  } from \"../actionTypes\";\r\n  \r\n  const DEFAULT_STATE = {\r\n    addedCredentials: {},\r\n    credentialsList : {}\r\n  };\r\n  \r\n  export default (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n      case ADDED_CREDENTIALS:\r\n        return {\r\n          ...state,\r\n          addedCredentials: action.addedCredentials,\r\n        };\r\n      case CREDENTIALS_LIST:\r\n        return {\r\n          ...state,\r\n          credentialsList: action.credentialsList,\r\n        };      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\CredentialsListPage.js",["175"],"import React, { useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport dense from \"@material-ui/core/List/ListContext\";\r\nimport { getCredentialsList } from \"../../Store/actions/credentials\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport EditCredentialsDialog from \"../dialogs/EditCredentialsDialog\";\r\nimport NavigationBar from \"../NavigationBar\"\r\nimport DeleteCredentialsDialog from \"../dialogs/DeleteCredentialsDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n    marginTop: 20\r\n  },\r\n  container: {\r\n    align: \"center\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    height: 240,\r\n    align: \"center\",\r\n    background: \"#F0F8FF\"\r\n  },\r\n\r\n\r\n\r\n}));\r\n\r\nconst CredentialsList = ({ getCredentialsList, credentialsList, email }) => {\r\n\r\n  const [updated, setUpdated] = React.useState(false);\r\n  useEffect(() => {\r\n    getCredentialsList(email);\r\n    setUpdated(false);\r\n  }, [updated]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const onUpdateTable = (value) => {\r\n    setUpdated(value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar></NavigationBar>\r\n      <div className={classes.content}>\r\n        <br />\r\n        <div align=\"center\">\r\n          <h1><b><i>My Credentials</i></b></h1>\r\n        </div>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.tableWrapper}>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>Username</i></b>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>ID</i></b>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>Description</i></b>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>Password</i></b>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {credentialsList && credentialsList.length > 0 &&\r\n                  credentialsList.map((row, index) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        key={row.id}\r\n                      >\r\n                        <TableCell align=\"center\">\r\n                          <p>{row.username} </p>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <p>{row.id} </p>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <p>{row.description} </p>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <input type=\"password\" readOnly value={row.password}></input>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                        <EditCredentialsDialog\r\n                            idV={row.id}\r\n                            usernameV={row.username}\r\n                            descriptionV={row.description}\r\n                            passwordV={row.password}\r\n                            onUpdate={onUpdateTable}\r\n                          />  \r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <DeleteCredentialsDialog\r\n                            id={row.id}\r\n                            username={row.username}\r\n                            onUpdate={onUpdateTable}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n\r\n\r\n            </Table>\r\n          </div>\r\n        </Paper>\r\n        <br>\r\n        </br>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          href=\"/addCredentials\"\r\n        >\r\n          Add new credentials\r\n            </Button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  credentialsList: state.credentials.credentialsList,\r\n  email: state.user.user.sub\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    getCredentialsList\r\n  })(CredentialsList)\r\n);\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\GitPage.js",["176","177","178","179","180","181","182"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { cloneRepository } from \"../../Store/actions/home\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport NavigationBar from \"../../components/NavigationBar\"\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst CloneRepository = ({ cloneRepository, history }) => {\r\n  const [state, setState] = React.useState({\r\n    name: \"\",\r\n    username: localStorage.getItem(\"username\"),\r\n    command: \"\",\r\n    repository_name: \"\"\r\n  });\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const email = localStorage.getItem(\"username\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await cloneRepository(state).then((response) => {\r\n      if (response.status === 200) {\r\n        history.push(\"/repositories\");\r\n\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar></NavigationBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <GitHubIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Add Item\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Item name\"\r\n              name=\"name\"\r\n              autoFocus\r\n              autoComplete=\"name\"\r\n              value={state.name}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"repository_name\"\r\n              label=\"Git repository\"\r\n              name=\"repository_name\"\r\n              autoFocus\r\n              autoComplete=\"name\"\r\n              value={state.repository_name}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"command\"\r\n              label=\"Shell commands\"\r\n              name=\"command\"\r\n              multiline\r\n              rows={10}\r\n              autoFocus\r\n              autoComplete=\"command\"\r\n              value={state.command}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              OK\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { cloneRepository })(CloneRepository));","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\RepositoryListPage.js",["183","184","185","186","187","188"],"import React, { useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport dense from \"@material-ui/core/List/ListContext\";\r\nimport { getUserRepositories, executeShell, getWorkspace } from \"../../Store/actions/home\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport EditCommandDialog from \"../dialogs/EditCommandDialog\";\r\nimport NavigationBar from \"../NavigationBar\"\r\nimport DeleteRepoDialog from \"../dialogs/DeleteRepoDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n    marginTop: 20\r\n  },\r\n  container: {\r\n    align: \"center\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    height: 240,\r\n    align: \"center\",\r\n    background: \"#F0F8FF\"\r\n  },\r\n\r\n\r\n\r\n}));\r\n\r\nconst RepositoriesList = ({ getUserRepositories, repositories, executeShell, getWorkspace, workspace, history }) => {\r\n\r\n  const [updated, setUpdated] = React.useState(false);\r\n  useEffect(() => {\r\n    getUserRepositories();\r\n    setUpdated(false);\r\n  }, [updated]);\r\n\r\n  const classes = useStyles();\r\n  const [error, setError] = React.useState(false);\r\n\r\n\r\n  const onUpdateTable = (value) => {\r\n    setUpdated(value);\r\n  }\r\n\r\n  const buildRepo = async (e) => {\r\n    e.preventDefault();\r\n    const res = await executeShell().then((response) => {\r\n    });\r\n    setError(true);\r\n  }\r\n\r\n  const handleGetWorkspace = async (id) => {\r\n    const res = await getWorkspace(id).then((response) => {\r\n      if (response.status === 200) {\r\n        localStorage.setItem(\"workspace\", response.data.value);\r\n        history.push(\"/workspace\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar></NavigationBar>\r\n      <div className={classes.content}>\r\n\r\n\r\n        <br />\r\n        <div align=\"center\">\r\n          <h1><b><i>My Repositories</i></b></h1>\r\n        </div>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.tableWrapper}>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>Name</i></b>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>Repository</i></b>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>Location</i></b>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <b><i>Command</i></b>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {repositories && repositories.length > 0 &&\r\n                  repositories.map((row, index) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        key={row.id}\r\n                      >\r\n                        <TableCell align=\"center\">\r\n                          <p>{row.name} </p>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <p>{row.repository_name} </p>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <p>{row.location} </p>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <p> {row.command}   </p>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <EditCommandDialog\r\n                            idV={row.id}\r\n                            commandV={row.command}\r\n                            nameV={row.name}\r\n                            locationV={row.location}\r\n                            onUpdate={onUpdateTable}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <DeleteRepoDialog\r\n                            id={row.id}\r\n                            name={row.name}\r\n                            onUpdate={onUpdateTable}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Button variant=\"outlined\" color=\"primary\" onClick={buildRepo}>\r\n                            Build\r\n                          </Button>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Button variant=\"outlined\" color=\"primary\" onClick={() => handleGetWorkspace(row.id)}>\r\n                            Workspace\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n\r\n\r\n            </Table>\r\n          </div>\r\n        </Paper>\r\n        <br>\r\n        </br>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          href=\"/git\"\r\n        >\r\n          Clone new repository\r\n            </Button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repositories: state.home.repositories,\r\n  workspace: state.home.workspace\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    getUserRepositories,\r\n    executeShell,\r\n    getWorkspace\r\n  })(RepositoriesList)\r\n);\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\AddCredentialsPage.js",["189","190","191","192","193","194","195"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { addUserCredentials } from \"../../Store/actions/credentials\"\r\nimport NavigationBar from \"../../components/NavigationBar\"\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst AddCredentials = ({ addUserCredentials, history, email }) => {\r\n  const [state, setState] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    id: \"\",\r\n    description: \"\"\r\n  });\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await addUserCredentials(email, state).then((response) => {\r\n      if (response.status === 201) {\r\n        history.push(\"/myCredentials\");\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar></NavigationBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Add Credentials\r\n        </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              value={state.username}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"New password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={state.password}\r\n              autoComplete=\"current-password\"\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"ide\"\r\n              label=\"ID\"\r\n              name=\"id\"\r\n              autoComplete=\"ID\"\r\n              autoFocus\r\n              value={state.id}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              multiline\r\n              rows={10}\r\n              autoFocus\r\n              autoComplete=\"description\"\r\n              value={state.description}\r\n              error={error}\r\n              onChange={handleChangeTextField}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              OK\r\n          </Button>\r\n\r\n          </form>\r\n        </div>\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.user.user.sub\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { addUserCredentials })(AddCredentials));\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\Store\\actions\\credentials.js",["196","197"],"import {\r\n    CREDENTIALS_LIST, \r\n    ADDED_CREDENTIALS,\r\n    UPDATED_CREDENTIALS \r\n  } from \"../actionTypes\";\r\n  import axios from \"axios\";\r\n  import { credentialsPath } from \"../../properties/path-properites\";\r\n\r\nexport const addUserCredentials = (email, credentials) => async (dispatch) => {\r\n    try {\r\n      const addedCredentials = await axios.post(credentialsPath + \"/user/\" + `${email}`, credentials, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      });\r\n      dispatch(setAddedCredentials(addedCredentials.data));\r\n      return addedCredentials;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  export const setAddedCredentials = (addedCredentials) => ({\r\n    type: ADDED_CREDENTIALS,\r\n    addedCredentials,\r\n  });\r\n  \r\n  export const getCredentialsList = (email) => async (dispatch) => {\r\n    try {\r\n      const credentialsList = await axios.get(credentialsPath + \"/user/\" + `${email}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      });\r\n      dispatch(setCredentialsList(credentialsList.data));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  export const setCredentialsList = (credentialsList) => ({\r\n    type: CREDENTIALS_LIST,\r\n    credentialsList,\r\n  });\r\n\r\n  export const deleteCredentials = (id) => async (dispatch) => {\r\n    try {\r\n      await axios.delete(credentialsPath + `/${id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  export const updateCredentials = (credentials) => async (dispatch) => {\r\n    try {\r\n      const updatedCredentials = await axios.put(credentialsPath + `/${credentials.id}`, credentials);\r\n      dispatch(setUpdatedCredentials(updatedCredentials.data));\r\n      return updatedCredentials;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  export const setUpdatedCredentials = (updatedCredentials) => ({\r\n    type: UPDATED_CREDENTIALS,\r\n    updatedCredentials,\r\n  });","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\DeleteCredentialsDialog.js",["198","199"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteCredentials } from \"../../Store/actions/credentials\";\r\n\r\nconst DeleteDialog = ({ id, username, deleteCredentials, onUpdate }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onUpdate(false);\r\n  };\r\n  const handleYES = async (e) => {\r\n    await deleteCredentials(id).then((response) => {\r\n      setOpen(false);\r\n      onUpdate(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Delete\r\n            </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Are you sure you want to delete credentials with username '\" + username + \"'?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You will not be able to revert and reuse deleted credentials.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            CANCEL\r\n                    </Button>\r\n          <Button onClick={handleYES} color=\"primary\" autoFocus>\r\n            OK\r\n                    </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { deleteCredentials })(DeleteDialog)\r\n);\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\EditCredentialsDialog.js",["200","201","202","203","204","205"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { updateCredentials } from '../../Store/actions/credentials';\r\n\r\nconst FormDialog = ({ idV, usernameV, descriptionV, passwordV, onUpdate, updateCredentials }) => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const [error, setError] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [state, setState] = React.useState({\r\n    id: (idV == null) ? \"\" : idV,\r\n    username: (usernameV == null) ? \"\" : usernameV,\r\n    description: (descriptionV == null) ? \"\" : descriptionV,\r\n    password: \"\" \r\n  });\r\n  const handleChangeTextField = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onUpdate(false);\r\n  };\r\n\r\n  const handleYES = async (e) => {\r\n    const res = await updateCredentials(state).then((response) => {\r\n      if (response.status === 200) {\r\n        setOpen(false);\r\n        onUpdate(true);\r\n      }\r\n    });\r\n    setError(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        EDIT\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit credentials</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You will not be able to use old credentials.\r\n          </DialogContentText>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={state.username}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            autoComplete=\"password\"\r\n            autoFocus\r\n            type=\"password\"\r\n            value={state.password}\r\n            error={error}\r\n            onChange={handleChangeTextField}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            autoComplete=\"description\"\r\n            autoFocus\r\n            multiline\r\n            rows={10}\r\n            value={state.description}\r\n            onChange={handleChangeTextField}\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleYES} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { updateCredentials })(FormDialog)\r\n);\r\n\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\dialogs\\DeleteRepoDialog.js",["206","207"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteRepo } from \"../../Store/actions/home\";\r\n\r\nconst DeleteDialog = ({ id, name, deleteRepo, onUpdate }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onUpdate(false);\r\n  };\r\n  const handleYES = async (e) => {\r\n    await deleteRepo(id).then((response) => {\r\n      setOpen(false);\r\n      onUpdate(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Delete\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Are you sure you want to delete repository with name '\" + name + \"'?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You will not be able to revert deleted repository.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            CANCEL\r\n                    </Button>\r\n          <Button onClick={handleYES} color=\"primary\" autoFocus>\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { deleteRepo })(DeleteDialog)\r\n);\r\n","C:\\Users\\o.savic\\Desktop\\Projects\\Eclipse workspace\\demo\\my-app\\src\\components\\Home\\WorkspacePage.js",["208","209","210"],"import React, { useEffect } from 'react';\r\nimport NavigationBar from '../NavigationBar'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getWorkspace } from \"../../Store/actions/home\"\r\n\r\nconst Workspace = ({ }) => {\r\n  const workspace = localStorage.getItem(\"workspace\");\r\n  const newText = workspace.split('\\n').map(str => <p>{str}</p>);\r\n  return (\r\n    <div>\r\n      <NavigationBar></NavigationBar>\r\n      <div style={{ marginLeft: '750px' }}>\r\n        <h1><u> Workspace </u></h1>\r\n        {newText}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(Workspace));\r\n",{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":12},{"ruleId":"219","severity":1,"message":"220","line":96,"column":58,"nodeType":"221","messageId":"222","endLine":96,"endColumn":59},{"ruleId":"223","severity":1,"message":"224","line":16,"column":1,"nodeType":"225","endLine":46,"endColumn":3},{"ruleId":"215","severity":1,"message":"226","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":16},{"ruleId":"215","severity":1,"message":"227","line":13,"column":8,"nodeType":"217","messageId":"218","endLine":13,"endColumn":19},{"ruleId":"215","severity":1,"message":"228","line":14,"column":8,"nodeType":"217","messageId":"218","endLine":14,"endColumn":18},{"ruleId":"215","severity":1,"message":"229","line":15,"column":8,"nodeType":"217","messageId":"218","endLine":15,"endColumn":14},{"ruleId":"215","severity":1,"message":"230","line":29,"column":9,"nodeType":"217","messageId":"218","endLine":29,"endColumn":16},{"ruleId":"215","severity":1,"message":"231","line":54,"column":11,"nodeType":"217","messageId":"218","endLine":54,"endColumn":14},{"ruleId":"211","replacedBy":"232"},{"ruleId":"213","replacedBy":"233"},{"ruleId":"223","severity":1,"message":"224","line":14,"column":1,"nodeType":"225","endLine":40,"endColumn":3},{"ruleId":"215","severity":1,"message":"234","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":24},{"ruleId":"215","severity":1,"message":"235","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":16},{"ruleId":"215","severity":1,"message":"236","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":11},{"ruleId":"215","severity":1,"message":"231","line":68,"column":11,"nodeType":"217","messageId":"218","endLine":68,"endColumn":14},{"ruleId":"215","severity":1,"message":"234","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":24},{"ruleId":"215","severity":1,"message":"235","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":16},{"ruleId":"215","severity":1,"message":"236","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":11},{"ruleId":"215","severity":1,"message":"231","line":58,"column":11,"nodeType":"217","messageId":"218","endLine":58,"endColumn":14},{"ruleId":"215","severity":1,"message":"237","line":19,"column":8,"nodeType":"217","messageId":"218","endLine":19,"endColumn":20},{"ruleId":"215","severity":1,"message":"238","line":20,"column":8,"nodeType":"217","messageId":"218","endLine":20,"endColumn":17},{"ruleId":"215","severity":1,"message":"239","line":26,"column":8,"nodeType":"217","messageId":"218","endLine":26,"endColumn":23},{"ruleId":"215","severity":1,"message":"240","line":27,"column":8,"nodeType":"217","messageId":"218","endLine":27,"endColumn":16},{"ruleId":"215","severity":1,"message":"241","line":28,"column":8,"nodeType":"217","messageId":"218","endLine":28,"endColumn":15},{"ruleId":"215","severity":1,"message":"242","line":29,"column":8,"nodeType":"217","messageId":"218","endLine":29,"endColumn":26},{"ruleId":"215","severity":1,"message":"243","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"244","line":41,"column":10,"nodeType":"217","messageId":"218","endLine":41,"endColumn":15},{"ruleId":"215","severity":1,"message":"245","line":42,"column":18,"nodeType":"217","messageId":"218","endLine":42,"endColumn":27},{"ruleId":"215","severity":1,"message":"246","line":58,"column":13,"nodeType":"217","messageId":"218","endLine":58,"endColumn":19},{"ruleId":"247","severity":1,"message":"248","line":70,"column":6,"nodeType":"249","endLine":70,"endColumn":8,"suggestions":"250"},{"ruleId":"215","severity":1,"message":"231","line":78,"column":11,"nodeType":"217","messageId":"218","endLine":78,"endColumn":14},{"ruleId":"215","severity":1,"message":"251","line":88,"column":11,"nodeType":"217","messageId":"218","endLine":88,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":11,"column":3,"nodeType":"225","endLine":26,"endColumn":5},{"ruleId":"247","severity":1,"message":"252","line":48,"column":6,"nodeType":"249","endLine":48,"endColumn":15,"suggestions":"253"},{"ruleId":"215","severity":1,"message":"234","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":24},{"ruleId":"215","severity":1,"message":"235","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":16},{"ruleId":"215","severity":1,"message":"254","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":12},{"ruleId":"215","severity":1,"message":"255","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":12},{"ruleId":"215","severity":1,"message":"236","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":11},{"ruleId":"215","severity":1,"message":"256","line":55,"column":9,"nodeType":"217","messageId":"218","endLine":55,"endColumn":14},{"ruleId":"215","severity":1,"message":"231","line":58,"column":11,"nodeType":"217","messageId":"218","endLine":58,"endColumn":14},{"ruleId":"215","severity":1,"message":"255","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":12},{"ruleId":"215","severity":1,"message":"254","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":12},{"ruleId":"247","severity":1,"message":"257","line":50,"column":6,"nodeType":"249","endLine":50,"endColumn":15,"suggestions":"258"},{"ruleId":"215","severity":1,"message":"244","line":53,"column":10,"nodeType":"217","messageId":"218","endLine":53,"endColumn":15},{"ruleId":"215","severity":1,"message":"231","line":62,"column":11,"nodeType":"217","messageId":"218","endLine":62,"endColumn":14},{"ruleId":"215","severity":1,"message":"231","line":68,"column":11,"nodeType":"217","messageId":"218","endLine":68,"endColumn":14},{"ruleId":"215","severity":1,"message":"234","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":24},{"ruleId":"215","severity":1,"message":"235","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":16},{"ruleId":"215","severity":1,"message":"254","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":12},{"ruleId":"215","severity":1,"message":"255","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":12},{"ruleId":"215","severity":1,"message":"236","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":11},{"ruleId":"215","severity":1,"message":"259","line":16,"column":8,"nodeType":"217","messageId":"218","endLine":16,"endColumn":24},{"ruleId":"215","severity":1,"message":"231","line":59,"column":11,"nodeType":"217","messageId":"218","endLine":59,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":11,"column":76,"nodeType":"221","messageId":"222","endLine":11,"endColumn":77},{"ruleId":"219","severity":1,"message":"220","line":30,"column":74,"nodeType":"221","messageId":"222","endLine":30,"endColumn":75},{"ruleId":"215","severity":1,"message":"244","line":17,"column":10,"nodeType":"217","messageId":"218","endLine":17,"endColumn":15},{"ruleId":"215","severity":1,"message":"260","line":17,"column":17,"nodeType":"217","messageId":"218","endLine":17,"endColumn":25},{"ruleId":"215","severity":1,"message":"226","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":16},{"ruleId":"215","severity":1,"message":"227","line":13,"column":8,"nodeType":"217","messageId":"218","endLine":13,"endColumn":19},{"ruleId":"215","severity":1,"message":"228","line":14,"column":8,"nodeType":"217","messageId":"218","endLine":14,"endColumn":18},{"ruleId":"215","severity":1,"message":"229","line":15,"column":8,"nodeType":"217","messageId":"218","endLine":15,"endColumn":14},{"ruleId":"215","severity":1,"message":"230","line":29,"column":9,"nodeType":"217","messageId":"218","endLine":29,"endColumn":16},{"ruleId":"215","severity":1,"message":"231","line":54,"column":11,"nodeType":"217","messageId":"218","endLine":54,"endColumn":14},{"ruleId":"215","severity":1,"message":"244","line":17,"column":10,"nodeType":"217","messageId":"218","endLine":17,"endColumn":15},{"ruleId":"215","severity":1,"message":"260","line":17,"column":17,"nodeType":"217","messageId":"218","endLine":17,"endColumn":25},{"ruleId":"215","severity":1,"message":"243","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"261","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":7,"column":20,"nodeType":"264","messageId":"265","endLine":7,"endColumn":23},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'classes' is assigned a value but never used.","'res' is assigned a value but never used.",["266"],["267"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'FavoriteIcon' is defined but never used.","'GroupIcon' is defined but never used.","'UserProfilePage' is defined but never used.","'TabPanel' is defined but never used.","'GitPage' is defined but never used.","'RepositoryListPage' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'setChange' is assigned a value but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'email' and 'getUserData'. Either include them or remove the dependency array. If 'getUserData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["268"],"'resp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email' and 'getCredentialsList'. Either include them or remove the dependency array. If 'getCredentialsList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["269"],"'Link' is defined but never used.","'Grid' is defined but never used.","'email' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserRepositories'. Either include it or remove the dependency array. If 'getUserRepositories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["270"],"'LockOutlinedIcon' is defined but never used.","'setError' is assigned a value but never used.","'getWorkspace' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [email, getUserData]",{"range":"277","text":"278"},"Update the dependencies array to be: [email, getCredentialsList, updated]",{"range":"279","text":"280"},"Update the dependencies array to be: [getUserRepositories, updated]",{"range":"281","text":"282"},[2261,2263],"[email, getUserData]",[1436,1445],"[email, getCredentialsList, updated]",[1560,1569],"[getUserRepositories, updated]"]